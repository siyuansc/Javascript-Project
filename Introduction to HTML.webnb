# Introduction to HTML


To truly appreciate HTML, let's first step back to the early days of the internet. Before HTML existed, sharing documents online was challenging—documents were mostly isolated and static, with limited ways to easily jump from one piece of information to another. Users had to manually search and open documents one-by-one, which was inefficient and cumbersome.

In the early 1990s, Tim Berners-Lee introduced **HTML (HyperText Markup Language)** precisely to solve this problem. The groundbreaking idea was **"HyperText"**—documents could now include links, directly connecting one document to another, allowing users to effortlessly navigate related content. This simple yet powerful concept fundamentally changed how people interact with information online.

At its core, HTML provides the backbone of any webpage. It uses clearly defined, human-readable tags to organize content—such as headings, paragraphs, images, and links—in a structured, meaningful way. While the visual appearance and interactivity of modern websites often rely on other languages like CSS and JavaScript, none of them could function without the foundational structure that HTML provides.

Initially, HTML was designed just for text-based content sharing among researchers. Early webpages were extremely simple—mainly text with basic links, without images, styles, or any dynamic behavior. Over time, as the internet rapidly expanded beyond academia, HTML evolved considerably. Newer HTML standards added richer media support, better structure, semantics, and many accessibility features, laying a solid foundation for today's sophisticated web.

Today, HTML continues to serve as the cornerstone language of the internet, providing the essential structure and meaning behind the diverse content we interact with daily.

Now that we've explored the historical context and importance of HTML, let's dive into understanding exactly what HTML is, why it matters, and how it works together with CSS and JavaScript to structure, style, and enhance interactive web content!

## What is HTML?

**HTML** (HyperText Markup Language) is the standard language for creating web pages. It is a "markup language"---a language for adding **structure** and **formatting** to text. More specifically, it is a markup language for creating "hypertext" documents, which are documents that contain links to other documents (the foundation of the World Wide Web).

## Why HTML?

Although our overall focus is on JavaScript, we first need to learn some foundational HTML. We will cover *just enough* HTML (and CSS) to get us started with JavaScript.

## The Three Web Languages

Although our focus is on JavaScript, Web development involves three primary languages:

- **HTML** for defining the structure and content
- **CSS** for specifying how browsers should render/display this content
- **JavaScript** for defining the **behavior** of the page---how it reacts to things like clicks and keypresses


One way to think about these three languages is to use an analogy with the human body:
![](js-body-analogy.png)
- **HTML** is the **skeleton** of the body, providing the structure and shape
- **CSS** is the **skin** of the body, providing the appearance and style
- **JavaScript** is the **muscles** of the body, providing the movement and interactivity

JavaScript will be the focus of this specialization but we're going to cover a bit of HTML and CSS to get us enough of a foundation to started.


## Using these Notebooks

These notebooks are designed to be interactive. You can run the code cells, edit them, and see the results. You can also add new cells to write your own code.

For example, try editing the text in the following cell:

```{html}
<p>Hello! Try "running" this by clicking me and then clicking the "play" button to my left.</p>
```